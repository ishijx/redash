// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScheduleDialog Sets correct schedule settings Sets to "1 Day 22:15" Sets to correct interval 1`] = `
<div
  data-testid="interval"
>
  <span
    data-testid="select-count"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="1"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="1"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "1",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "1",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "1",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title={null}
                    >
                      1
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
  <span
    data-testid="select-interval"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="day(s)"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="day(s)"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "day(s)",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "day(s)",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "day(s)",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="day(s)"
                    >
                      day(s)
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "1 Day 22:15" Sets to correct time 1`] = `
<div
  data-testid="time"
>
  <TimePicker
    align={
      Object {
        "offset": Array [
          0,
          -2,
        ],
      }
    }
    allowEmpty={false}
    defaultValue={"1999-12-31T22:15:00.000Z"}
    disabled={false}
    focusOnOpen={true}
    format="HH:mm"
    getPopupContainer={[Function]}
    hideDisabledOptions={false}
    minuteStep={5}
    onChange={[Function]}
    placement="bottomLeft"
    prefixCls="ant-time-picker"
    transitionName="slide-up"
  >
    <LocaleReceiver
      componentName="TimePicker"
      defaultLocale={
        Object {
          "placeholder": "Select time",
        }
      }
    >
      <Picker
        addon={[Function]}
        align={
          Object {
            "offset": Array [
              0,
              -2,
            ],
          }
        }
        allowEmpty={false}
        className=""
        clearText="clear"
        defaultOpen={false}
        defaultOpenValue={"2000-01-01T00:00:00.000Z"}
        disabled={false}
        disabledHours={[Function]}
        disabledMinutes={[Function]}
        disabledSeconds={[Function]}
        focusOnOpen={true}
        format="HH:mm"
        getPopupContainer={[Function]}
        hideDisabledOptions={false}
        inputReadOnly={false}
        minuteStep={5}
        onBlur={[Function]}
        onChange={[Function]}
        onClose={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onOpen={[Function]}
        placeholder="Select time"
        placement="bottomLeft"
        popupClassName=""
        prefixCls="ant-time-picker"
        showHour={true}
        showMinute={true}
        showSecond={false}
        style={Object {}}
        transitionName="slide-up"
        use12Hours={false}
        value={"1999-12-31T22:15:00.000Z"}
      >
        <Trigger
          action={
            Array [
              "click",
            ]
          }
          afterPopupVisibleChange={[Function]}
          blurDelay={0.15}
          builtinPlacements={
            Object {
              "bottomLeft": Object {
                "offset": Array [
                  0,
                  -3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "offset": Array [
                  0,
                  -3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "offset": Array [
                  0,
                  3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "offset": Array [
                  0,
                  3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          defaultPopupVisible={false}
          destroyPopupOnHide={true}
          focusDelay={0}
          getDocument={[Function]}
          getPopupClassNameFromAlign={[Function]}
          getPopupContainer={[Function]}
          hideAction={Array []}
          mask={false}
          maskClosable={true}
          mouseEnterDelay={0}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onPopupVisibleChange={[Function]}
          popup={
            <Panel
              addon={[Function]}
              allowEmpty={false}
              clearText="clear"
              defaultOpenValue={"2000-01-01T00:00:00.000Z"}
              disabledHours={[Function]}
              disabledMinutes={[Function]}
              disabledSeconds={[Function]}
              focusOnOpen={true}
              format="HH:mm"
              hideDisabledOptions={false}
              inputReadOnly={false}
              minuteStep={5}
              onChange={[Function]}
              onClear={[Function]}
              onEsc={[Function]}
              onKeyDown={[Function]}
              placeholder="Select time"
              prefixCls="ant-time-picker-panel"
              showHour={true}
              showMinute={true}
              showSecond={false}
              use12Hours={false}
              value={"1999-12-31T22:15:00.000Z"}
            />
          }
          popupAlign={
            Object {
              "offset": Array [
                0,
                -2,
              ],
            }
          }
          popupClassName=" ant-time-picker-panel-narrow ant-time-picker-panel-column-2"
          popupPlacement="bottomLeft"
          popupStyle={Object {}}
          popupTransitionName="slide-up"
          popupVisible={false}
          prefixCls="ant-time-picker-panel"
          showAction={Array []}
        >
          <span
            className="ant-time-picker "
            key="trigger"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={Object {}}
          >
            <input
              className="ant-time-picker-input"
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Select time"
              readOnly={false}
              type="text"
              value="00:15"
            />
            <span
              className="ant-time-picker-icon"
            />
          </span>
        </Trigger>
      </Picker>
    </LocaleReceiver>
  </TimePicker>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Hours" 1`] = `
<div
  data-testid="interval"
>
  <span
    data-testid="select-count"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="2"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="2"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "2",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "2",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "2",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title={null}
                    >
                      2
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
  <span
    data-testid="select-interval"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="hour(s)"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="hour(s)"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "hour(s)",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "hour(s)",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "hour(s)",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="hour(s)"
                    >
                      hour(s)
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct interval 1`] = `
<div
  data-testid="interval"
>
  <span
    data-testid="select-count"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="2"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="2"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "2",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "2",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "2",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title={null}
                    >
                      2
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
  <span
    data-testid="select-interval"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="week(s)"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="week(s)"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "week(s)",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "week(s)",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "week(s)",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="week(s)"
                    >
                      week(s)
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct time 1`] = `
<div
  data-testid="time"
>
  <TimePicker
    align={
      Object {
        "offset": Array [
          0,
          -2,
        ],
      }
    }
    allowEmpty={false}
    defaultValue={"1999-12-31T22:15:00.000Z"}
    disabled={false}
    focusOnOpen={true}
    format="HH:mm"
    getPopupContainer={[Function]}
    hideDisabledOptions={false}
    minuteStep={5}
    onChange={[Function]}
    placement="bottomLeft"
    prefixCls="ant-time-picker"
    transitionName="slide-up"
  >
    <LocaleReceiver
      componentName="TimePicker"
      defaultLocale={
        Object {
          "placeholder": "Select time",
        }
      }
    >
      <Picker
        addon={[Function]}
        align={
          Object {
            "offset": Array [
              0,
              -2,
            ],
          }
        }
        allowEmpty={false}
        className=""
        clearText="clear"
        defaultOpen={false}
        defaultOpenValue={"2000-01-01T00:00:00.000Z"}
        disabled={false}
        disabledHours={[Function]}
        disabledMinutes={[Function]}
        disabledSeconds={[Function]}
        focusOnOpen={true}
        format="HH:mm"
        getPopupContainer={[Function]}
        hideDisabledOptions={false}
        inputReadOnly={false}
        minuteStep={5}
        onBlur={[Function]}
        onChange={[Function]}
        onClose={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onOpen={[Function]}
        placeholder="Select time"
        placement="bottomLeft"
        popupClassName=""
        prefixCls="ant-time-picker"
        showHour={true}
        showMinute={true}
        showSecond={false}
        style={Object {}}
        transitionName="slide-up"
        use12Hours={false}
        value={"1999-12-31T22:15:00.000Z"}
      >
        <Trigger
          action={
            Array [
              "click",
            ]
          }
          afterPopupVisibleChange={[Function]}
          blurDelay={0.15}
          builtinPlacements={
            Object {
              "bottomLeft": Object {
                "offset": Array [
                  0,
                  -3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "offset": Array [
                  0,
                  -3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "offset": Array [
                  0,
                  3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "offset": Array [
                  0,
                  3,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          defaultPopupVisible={false}
          destroyPopupOnHide={true}
          focusDelay={0}
          getDocument={[Function]}
          getPopupClassNameFromAlign={[Function]}
          getPopupContainer={[Function]}
          hideAction={Array []}
          mask={false}
          maskClosable={true}
          mouseEnterDelay={0}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onPopupVisibleChange={[Function]}
          popup={
            <Panel
              addon={[Function]}
              allowEmpty={false}
              clearText="clear"
              defaultOpenValue={"2000-01-01T00:00:00.000Z"}
              disabledHours={[Function]}
              disabledMinutes={[Function]}
              disabledSeconds={[Function]}
              focusOnOpen={true}
              format="HH:mm"
              hideDisabledOptions={false}
              inputReadOnly={false}
              minuteStep={5}
              onChange={[Function]}
              onClear={[Function]}
              onEsc={[Function]}
              onKeyDown={[Function]}
              placeholder="Select time"
              prefixCls="ant-time-picker-panel"
              showHour={true}
              showMinute={true}
              showSecond={false}
              use12Hours={false}
              value={"1999-12-31T22:15:00.000Z"}
            />
          }
          popupAlign={
            Object {
              "offset": Array [
                0,
                -2,
              ],
            }
          }
          popupClassName=" ant-time-picker-panel-narrow ant-time-picker-panel-column-2"
          popupPlacement="bottomLeft"
          popupStyle={Object {}}
          popupTransitionName="slide-up"
          popupVisible={false}
          prefixCls="ant-time-picker-panel"
          showAction={Array []}
        >
          <span
            className="ant-time-picker "
            key="trigger"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            style={Object {}}
          >
            <input
              className="ant-time-picker-input"
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Select time"
              readOnly={false}
              type="text"
              value="00:15"
            />
            <span
              className="ant-time-picker-icon"
            />
          </span>
        </Trigger>
      </Picker>
    </LocaleReceiver>
  </TimePicker>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "2 Weeks 22:15 Tuesday" Sets to correct weekday 1`] = `
<div
  data-testid="weekday"
>
  <RadioGroup
    buttonStyle="outline"
    disabled={false}
    onChange={[Function]}
    prefixCls="ant-radio"
    size="medium"
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <RadioButton
        className="input"
        key="Sun"
        prefixCls="ant-radio-button"
        value="Sun"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Sun"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Sun"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Sun"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              S
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Mon"
        prefixCls="ant-radio-button"
        value="Mon"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Mon"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Mon"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Mon"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              M
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Tue"
        prefixCls="ant-radio-button"
        value="Tue"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Tue"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Tue"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Tue"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              T
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Wed"
        prefixCls="ant-radio-button"
        value="Wed"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Wed"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Wed"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Wed"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              W
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Thu"
        prefixCls="ant-radio-button"
        value="Thu"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Thu"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Thu"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Thu"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              T
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Fri"
        prefixCls="ant-radio-button"
        value="Fri"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Fri"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Fri"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Fri"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              F
            </span>
          </label>
        </Radio>
      </RadioButton>
      <RadioButton
        className="input"
        key="Sat"
        prefixCls="ant-radio-button"
        value="Sat"
      >
        <Radio
          checked={false}
          className="input"
          disabled={false}
          onChange={[Function]}
          prefixCls="ant-radio-button"
          type="radio"
          value="Sat"
        >
          <label
            className="input ant-radio-button-wrapper"
          >
            <Checkbox
              checked={false}
              className=""
              defaultChecked={false}
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              prefixCls="ant-radio-button"
              style={Object {}}
              type="radio"
              value="Sat"
            >
              <span
                className="ant-radio-button"
                style={Object {}}
              >
                <input
                  checked={false}
                  className="ant-radio-button-input"
                  disabled={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="radio"
                  value="Sat"
                />
                <span
                  className="ant-radio-button-inner"
                />
              </span>
            </Checkbox>
            <span>
              S
            </span>
          </label>
        </Radio>
      </RadioButton>
    </div>
  </RadioGroup>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "5 Minutes" 1`] = `
<div
  data-testid="interval"
>
  <span
    data-testid="select-count"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="5"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="5"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "5",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "5",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "5",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title={null}
                    >
                      5
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
  <span
    data-testid="select-interval"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="minute(s)"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="minute(s)"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "minute(s)",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "minute(s)",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "minute(s)",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="minute(s)"
                    >
                      minute(s)
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Sets to "Never" 1`] = `
<div
  data-testid="interval"
>
  <span
    data-testid="select-interval"
  >
    <Select
      choiceTransitionName="zoom"
      className="input"
      dropdownMatchSelectWidth={false}
      getPopupContainer={[Function]}
      onChange={[Function]}
      prefixCls="ant-select"
      showSearch={false}
      transitionName="slide-up"
      value="Never"
    >
      <LocaleReceiver
        componentName="Select"
        defaultLocale={
          Object {
            "notFoundContent": "Not Found",
          }
        }
      >
        <Select
          allowClear={false}
          autoClearSearchValue={true}
          backfill={false}
          choiceTransitionName="zoom"
          className="input"
          combobox={false}
          defaultActiveFirstOption={true}
          defaultOpen={false}
          dropdownMatchSelectWidth={false}
          dropdownMenuStyle={Object {}}
          dropdownStyle={Object {}}
          getPopupContainer={[Function]}
          labelInValue={false}
          multiple={false}
          notFoundContent="Not Found"
          onBlur={[Function]}
          onChange={[Function]}
          onDeselect={[Function]}
          onFocus={[Function]}
          onInputKeyDown={[Function]}
          onSearch={[Function]}
          onSelect={[Function]}
          optionFilterProp="value"
          optionLabelProp="children"
          placeholder=""
          prefixCls="ant-select"
          showAction={
            Array [
              "click",
            ]
          }
          showArrow={true}
          showSearch={false}
          tags={false}
          tokenSeparators={Array []}
          transitionName="slide-up"
          value="Never"
        >
          <SelectTrigger
            combobox={false}
            defaultActiveFirstOption={true}
            dropdownMatchSelectWidth={false}
            dropdownMenuStyle={Object {}}
            dropdownStyle={Object {}}
            getPopupContainer={[Function]}
            inputValue=""
            multiple={false}
            onDropdownVisibleChange={[Function]}
            onMenuDeselect={[Function]}
            onMenuSelect={[Function]}
            onPopupFocus={[Function]}
            options={Array []}
            prefixCls="ant-select"
            showAction={
              Array [
                "click",
              ]
            }
            showSearch={false}
            transitionName="slide-up"
            value={
              Array [
                "Never",
              ]
            }
            visible={false}
          >
            <Trigger
              action={Array []}
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 0,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                  },
                }
              }
              combobox={false}
              defaultActiveFirstOption={true}
              defaultPopupVisible={false}
              destroyPopupOnHide={false}
              dropdownMatchSelectWidth={false}
              dropdownMenuStyle={Object {}}
              dropdownStyle={Object {}}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              getPopupContainer={[Function]}
              hideAction={
                Array [
                  "click",
                ]
              }
              inputValue=""
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              multiple={false}
              onDropdownVisibleChange={[Function]}
              onMenuDeselect={[Function]}
              onMenuSelect={[Function]}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              options={Array []}
              popup={
                <DropdownMenu
                  defaultActiveFirstOption={true}
                  dropdownMenuStyle={Object {}}
                  inputValue=""
                  menuItems={Array []}
                  multiple={false}
                  onMenuDeselect={[Function]}
                  onMenuSelect={[Function]}
                  onPopupFocus={[Function]}
                  prefixCls="ant-select-dropdown"
                  value={
                    Array [
                      "Never",
                    ]
                  }
                  visible={false}
                />
              }
              popupAlign={Object {}}
              popupClassName="ant-select-dropdown--single"
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-select-dropdown"
              showAction={
                Array [
                  "click",
                ]
              }
              showSearch={false}
              transitionName="slide-up"
              value={
                Array [
                  "Never",
                ]
              }
              visible={false}
            >
              <div
                className="input ant-select ant-select-enabled"
                key="trigger"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <div
                  aria-autocomplete="list"
                  aria-expanded={false}
                  aria-haspopup="true"
                  className="ant-select-selection
            ant-select-selection--single"
                  key="selection"
                  onKeyDown={[Function]}
                  role="combobox"
                  tabIndex={0}
                >
                  <div
                    className="ant-select-selection__rendered"
                  >
                    <div
                      className="ant-select-selection-selected-value"
                      key="value"
                      style={
                        Object {
                          "display": "block",
                          "opacity": 1,
                        }
                      }
                      title="Never"
                    >
                      Never
                    </div>
                  </div>
                  <span
                    className="ant-select-arrow"
                    key="arrow"
                    onClick={[Function]}
                    style={
                      Object {
                        "WebkitUserSelect": "none",
                        "userSelect": "none",
                      }
                    }
                    unselectable="on"
                  >
                    <b />
                  </span>
                </div>
              </div>
            </Trigger>
          </SelectTrigger>
        </Select>
      </LocaleReceiver>
    </Select>
  </span>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Until feature Until is set 1`] = `
<div
  className="ends"
  data-testid="ends"
>
  <RadioGroup
    buttonStyle="outline"
    disabled={false}
    onChange={[Function]}
    prefixCls="ant-radio"
    size="medium"
    value={true}
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <Radio
        prefixCls="ant-radio"
        type="radio"
        value={false}
      >
        <label
          className="ant-radio-wrapper"
        >
          <Checkbox
            checked={false}
            className=""
            defaultChecked={false}
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={false}
          >
            <span
              className="ant-radio"
              style={Object {}}
            >
              <input
                checked={false}
                className="ant-radio-input"
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={false}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            Never
          </span>
        </label>
      </Radio>
      <Radio
        prefixCls="ant-radio"
        type="radio"
        value={true}
      >
        <label
          className="ant-radio-wrapper ant-radio-wrapper-checked"
        >
          <Checkbox
            checked={true}
            className=""
            defaultChecked={false}
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={true}
          >
            <span
              className="ant-radio ant-radio-checked"
              style={Object {}}
            >
              <input
                checked={true}
                className="ant-radio-input"
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={true}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            On
          </span>
        </label>
      </Radio>
    </div>
  </RadioGroup>
  <PickerWrapper
    allowClear={false}
    className="datepicker"
    format="YYYY-MM-DD"
    inputPrefixCls="ant-input"
    locale={Object {}}
    onChange={[Function]}
    onOk={[Function]}
    onOpenChange={[Function]}
    popupStyle={Object {}}
    prefixCls="ant-calendar"
    size="small"
    transitionName="slide-up"
    value={"2029-12-31T22:00:00.000Z"}
  >
    <LocaleReceiver
      componentName="DatePicker"
      defaultLocale={[Function]}
    >
      <CalenderWrapper
        allowClear={false}
        className="datepicker"
        format="YYYY-MM-DD"
        inputPrefixCls="ant-input"
        locale={
          Object {
            "lang": Object {
              "backToToday": "Back to today",
              "clear": "Clear",
              "dateFormat": "M/D/YYYY",
              "dateSelect": "select date",
              "dateTimeFormat": "M/D/YYYY HH:mm:ss",
              "dayFormat": "D",
              "decadeSelect": "Choose a decade",
              "month": "Month",
              "monthBeforeYear": true,
              "monthSelect": "Choose a month",
              "nextCentury": "Next century",
              "nextDecade": "Next decade",
              "nextMonth": "Next month (PageDown)",
              "nextYear": "Next year (Control + right)",
              "now": "Now",
              "ok": "Ok",
              "placeholder": "Select date",
              "previousCentury": "Last century",
              "previousDecade": "Last decade",
              "previousMonth": "Previous month (PageUp)",
              "previousYear": "Last year (Control + left)",
              "rangePlaceholder": Array [
                "Start date",
                "End date",
              ],
              "timeSelect": "select time",
              "today": "Today",
              "weekSelect": "Choose a week",
              "year": "Year",
              "yearFormat": "YYYY",
              "yearSelect": "Choose a year",
            },
            "timePickerLocale": Object {
              "placeholder": "Select time",
            },
          }
        }
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onOk={[Function]}
        onOpenChange={[Function]}
        pickerClass="ant-calendar-picker ant-calendar-picker-small"
        pickerInputClass="ant-calendar-picker-input ant-input ant-input-sm"
        popupStyle={Object {}}
        prefixCls="ant-calendar"
        showToday={true}
        size="small"
        timePicker={null}
        transitionName="slide-up"
        value={"2029-12-31T22:00:00.000Z"}
      >
        <span
          className="datepicker ant-calendar-picker ant-calendar-picker-small"
          onBlur={[Function]}
          onFocus={[Function]}
        >
          <Picker
            align={Object {}}
            allowClear={false}
            calendar={
              <Calendar
                className=""
                dateInputPlaceholder="Select date"
                defaultValue={"2000-01-01T00:00:00.000Z"}
                disabledTime={null}
                format="YYYY-MM-DD"
                locale={
                  Object {
                    "backToToday": "Back to today",
                    "clear": "Clear",
                    "dateFormat": "M/D/YYYY",
                    "dateSelect": "select date",
                    "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                    "dayFormat": "D",
                    "decadeSelect": "Choose a decade",
                    "month": "Month",
                    "monthBeforeYear": true,
                    "monthSelect": "Choose a month",
                    "nextCentury": "Next century",
                    "nextDecade": "Next decade",
                    "nextMonth": "Next month (PageDown)",
                    "nextYear": "Next year (Control + right)",
                    "now": "Now",
                    "ok": "Ok",
                    "placeholder": "Select date",
                    "previousCentury": "Last century",
                    "previousDecade": "Last decade",
                    "previousMonth": "Previous month (PageUp)",
                    "previousYear": "Last year (Control + left)",
                    "rangePlaceholder": Array [
                      "Start date",
                      "End date",
                    ],
                    "timeSelect": "select time",
                    "today": "Today",
                    "weekSelect": "Choose a week",
                    "year": "Year",
                    "yearFormat": "YYYY",
                    "yearSelect": "Choose a year",
                  }
                }
                onChange={[Function]}
                onClear={[Function]}
                onKeyDown={[Function]}
                onOk={[Function]}
                onPanelChange={[Function]}
                onSelect={[Function]}
                prefixCls="ant-calendar"
                renderFooter={[Function]}
                renderSidebar={[Function]}
                showDateInput={true}
                showToday={true}
                style={Object {}}
                timePicker={null}
                value={"2029-12-31T22:00:00.000Z"}
                visible={true}
              />
            }
            className="datepicker"
            defaultOpen={false}
            format="YYYY-MM-DD"
            inputPrefixCls="ant-input"
            locale={
              Object {
                "lang": Object {
                  "backToToday": "Back to today",
                  "clear": "Clear",
                  "dateFormat": "M/D/YYYY",
                  "dateSelect": "select date",
                  "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                  "dayFormat": "D",
                  "decadeSelect": "Choose a decade",
                  "month": "Month",
                  "monthBeforeYear": true,
                  "monthSelect": "Choose a month",
                  "nextCentury": "Next century",
                  "nextDecade": "Next decade",
                  "nextMonth": "Next month (PageDown)",
                  "nextYear": "Next year (Control + right)",
                  "now": "Now",
                  "ok": "Ok",
                  "placeholder": "Select date",
                  "previousCentury": "Last century",
                  "previousDecade": "Last decade",
                  "previousMonth": "Previous month (PageUp)",
                  "previousYear": "Last year (Control + left)",
                  "rangePlaceholder": Array [
                    "Start date",
                    "End date",
                  ],
                  "timeSelect": "select time",
                  "today": "Today",
                  "weekSelect": "Choose a week",
                  "year": "Year",
                  "yearFormat": "YYYY",
                  "yearSelect": "Choose a year",
                },
                "timePickerLocale": Object {
                  "placeholder": "Select time",
                },
              }
            }
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onOk={[Function]}
            onOpenChange={[Function]}
            pickerClass="ant-calendar-picker ant-calendar-picker-small"
            pickerInputClass="ant-calendar-picker-input ant-input ant-input-sm"
            placement="bottomLeft"
            popupStyle={Object {}}
            prefixCls="ant-calendar-picker-container"
            showToday={true}
            size="small"
            style={Object {}}
            timePicker={null}
            transitionName="slide-up"
            value={"2029-12-31T22:00:00.000Z"}
          >
            <Trigger
              action={
                Array [
                  "click",
                ]
              }
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      -3,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "tl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      -3,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "tr",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      3,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "bl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      3,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "br",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              destroyPopupOnHide={true}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              popup={
                <Calendar
                  className=""
                  dateInputPlaceholder="Select date"
                  defaultValue={"2029-12-31T22:00:00.000Z"}
                  disabledTime={null}
                  format="YYYY-MM-DD"
                  locale={
                    Object {
                      "backToToday": "Back to today",
                      "clear": "Clear",
                      "dateFormat": "M/D/YYYY",
                      "dateSelect": "select date",
                      "dateTimeFormat": "M/D/YYYY HH:mm:ss",
                      "dayFormat": "D",
                      "decadeSelect": "Choose a decade",
                      "month": "Month",
                      "monthBeforeYear": true,
                      "monthSelect": "Choose a month",
                      "nextCentury": "Next century",
                      "nextDecade": "Next decade",
                      "nextMonth": "Next month (PageDown)",
                      "nextYear": "Next year (Control + right)",
                      "now": "Now",
                      "ok": "Ok",
                      "placeholder": "Select date",
                      "previousCentury": "Last century",
                      "previousDecade": "Last decade",
                      "previousMonth": "Previous month (PageUp)",
                      "previousYear": "Last year (Control + left)",
                      "rangePlaceholder": Array [
                        "Start date",
                        "End date",
                      ],
                      "timeSelect": "select time",
                      "today": "Today",
                      "weekSelect": "Choose a week",
                      "year": "Year",
                      "yearFormat": "YYYY",
                      "yearSelect": "Choose a year",
                    }
                  }
                  onChange={[Function]}
                  onClear={[Function]}
                  onKeyDown={[Function]}
                  onOk={[Function]}
                  onPanelChange={[Function]}
                  onSelect={[Function]}
                  prefixCls="ant-calendar"
                  renderFooter={[Function]}
                  renderSidebar={[Function]}
                  selectedValue={"2029-12-31T22:00:00.000Z"}
                  showDateInput={true}
                  showToday={true}
                  style={Object {}}
                  timePicker={null}
                  value={"2029-12-31T22:00:00.000Z"}
                  visible={true}
                />
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-calendar-picker-container"
              showAction={Array []}
            >
              <div
                key="trigger"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onTouchStart={[Function]}
              >
                <input
                  className="ant-calendar-picker-input ant-input ant-input-sm"
                  placeholder="Select date"
                  readOnly={true}
                  value="2030-01-01"
                />
                <span
                  className="ant-calendar-picker-icon"
                />
              </div>
            </Trigger>
          </Picker>
        </span>
      </CalenderWrapper>
    </LocaleReceiver>
  </PickerWrapper>
</div>
`;

exports[`ScheduleDialog Sets correct schedule settings Until feature Until not set 1`] = `
<div
  className="ends"
  data-testid="ends"
>
  <RadioGroup
    buttonStyle="outline"
    disabled={false}
    onChange={[Function]}
    prefixCls="ant-radio"
    size="medium"
    value={false}
  >
    <div
      className="ant-radio-group ant-radio-group-outline ant-radio-group-medium"
    >
      <Radio
        prefixCls="ant-radio"
        type="radio"
        value={false}
      >
        <label
          className="ant-radio-wrapper ant-radio-wrapper-checked"
        >
          <Checkbox
            checked={true}
            className=""
            defaultChecked={false}
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={false}
          >
            <span
              className="ant-radio ant-radio-checked"
              style={Object {}}
            >
              <input
                checked={true}
                className="ant-radio-input"
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={false}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            Never
          </span>
        </label>
      </Radio>
      <Radio
        prefixCls="ant-radio"
        type="radio"
        value={true}
      >
        <label
          className="ant-radio-wrapper"
        >
          <Checkbox
            checked={false}
            className=""
            defaultChecked={false}
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            prefixCls="ant-radio"
            style={Object {}}
            type="radio"
            value={true}
          >
            <span
              className="ant-radio"
              style={Object {}}
            >
              <input
                checked={false}
                className="ant-radio-input"
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="radio"
                value={true}
              />
              <span
                className="ant-radio-inner"
              />
            </span>
          </Checkbox>
          <span>
            On
          </span>
        </label>
      </Radio>
    </div>
  </RadioGroup>
</div>
`;
